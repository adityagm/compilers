Terminals unused in grammar

   ASN


Grammar

    0 $accept: grammar $end

    1 grammar: /* empty */
    2        | grammar input

    3 input: assignment
    4      | operation
    5      | ifloop
    6      | loop

    7 assignment: VAR '=' value ';'

    8 ifloop: IF '(' condition ')' THEN ':' operation ELSE operation ENDIF

    9 loop: until
   10     | while

   11 until: LOOP operation UNTIL '(' condition ')'

   12 while: WHILE '(' condition ')' operation END

   13 operation: operation PLUS value ';'
   14          | operation MINUS value ';'
   15          | operation MUL value ';'
   16          | operation DIV value ';'
   17          | condition
   18          | display

   19 condition: condition LT value
   20          | condition GT value
   21          | condition LTE value
   22          | condition GTE value
   23          | condition EQV value
   24          | condition NE value
   25          | value

   26 display: PRINT value ';'

   27 value: INUM
   28      | FNUM
   29      | VAR


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 11 12
')' (41) 8 11 12
':' (58) 8
';' (59) 7 13 14 15 16 26
'=' (61) 7
error (256)
ASN (258)
MINUS (259) 14
PLUS (260) 13
MUL (261) 15
DIV (262) 16
LT (263) 19
GT (264) 20
LTE (265) 21
GTE (266) 22
EQV (267) 23
NE (268) 24
IF (269) 8
THEN (270) 8
ELSE (271) 8
UNTIL (272) 11
ENDIF (273) 8
LOOP (274) 11
WHILE (275) 12
END (276) 12
PRINT (277) 26
INUM (278) 27
FNUM (279) 28
VAR (280) 7 29


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
grammar (32)
    on left: 1 2, on right: 0 2
input (33)
    on left: 3 4 5 6, on right: 2
assignment (34)
    on left: 7, on right: 3
ifloop (35)
    on left: 8, on right: 5
loop (36)
    on left: 9 10, on right: 6
until (37)
    on left: 11, on right: 9
while (38)
    on left: 12, on right: 10
operation (39)
    on left: 13 14 15 16 17 18, on right: 4 8 11 12 13 14 15 16
condition (40)
    on left: 19 20 21 22 23 24 25, on right: 8 11 12 17 19 20 21 22
    23 24
display (41)
    on left: 26, on right: 18
value (42)
    on left: 27 28 29, on right: 7 13 14 15 16 19 20 21 22 23 24 25
    26


State 0

    0 $accept: . grammar $end

    $default  reduce using rule 1 (grammar)

    grammar  go to state 1


State 1

    0 $accept: grammar . $end
    2 grammar: grammar . input

    $end   shift, and go to state 2
    IF     shift, and go to state 3
    LOOP   shift, and go to state 4
    WHILE  shift, and go to state 5
    PRINT  shift, and go to state 6
    INUM   shift, and go to state 7
    FNUM   shift, and go to state 8
    VAR    shift, and go to state 9

    input       go to state 10
    assignment  go to state 11
    ifloop      go to state 12
    loop        go to state 13
    until       go to state 14
    while       go to state 15
    operation   go to state 16
    condition   go to state 17
    display     go to state 18
    value       go to state 19


State 2

    0 $accept: grammar $end .

    $default  accept


State 3

    8 ifloop: IF . '(' condition ')' THEN ':' operation ELSE operation ENDIF

    '('  shift, and go to state 20


State 4

   11 until: LOOP . operation UNTIL '(' condition ')'

    PRINT  shift, and go to state 6
    INUM   shift, and go to state 7
    FNUM   shift, and go to state 8
    VAR    shift, and go to state 21

    operation  go to state 22
    condition  go to state 17
    display    go to state 18
    value      go to state 19


State 5

   12 while: WHILE . '(' condition ')' operation END

    '('  shift, and go to state 23


State 6

   26 display: PRINT . value ';'

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    value  go to state 24


State 7

   27 value: INUM .

    $default  reduce using rule 27 (value)


State 8

   28 value: FNUM .

    $default  reduce using rule 28 (value)


State 9

    7 assignment: VAR . '=' value ';'
   29 value: VAR .

    '='  shift, and go to state 25

    $default  reduce using rule 29 (value)


State 10

    2 grammar: grammar input .

    $default  reduce using rule 2 (grammar)


State 11

    3 input: assignment .

    $default  reduce using rule 3 (input)


State 12

    5 input: ifloop .

    $default  reduce using rule 5 (input)


State 13

    6 input: loop .

    $default  reduce using rule 6 (input)


State 14

    9 loop: until .

    $default  reduce using rule 9 (loop)


State 15

   10 loop: while .

    $default  reduce using rule 10 (loop)


State 16

    4 input: operation .
   13 operation: operation . PLUS value ';'
   14          | operation . MINUS value ';'
   15          | operation . MUL value ';'
   16          | operation . DIV value ';'

    MINUS  shift, and go to state 26
    PLUS   shift, and go to state 27
    MUL    shift, and go to state 28
    DIV    shift, and go to state 29

    $default  reduce using rule 4 (input)


State 17

   17 operation: condition .
   19 condition: condition . LT value
   20          | condition . GT value
   21          | condition . LTE value
   22          | condition . GTE value
   23          | condition . EQV value
   24          | condition . NE value

    LT   shift, and go to state 30
    GT   shift, and go to state 31
    LTE  shift, and go to state 32
    GTE  shift, and go to state 33
    EQV  shift, and go to state 34
    NE   shift, and go to state 35

    $default  reduce using rule 17 (operation)


State 18

   18 operation: display .

    $default  reduce using rule 18 (operation)


State 19

   25 condition: value .

    $default  reduce using rule 25 (condition)


State 20

    8 ifloop: IF '(' . condition ')' THEN ':' operation ELSE operation ENDIF

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    condition  go to state 36
    value      go to state 19


State 21

   29 value: VAR .

    $default  reduce using rule 29 (value)


State 22

   11 until: LOOP operation . UNTIL '(' condition ')'
   13 operation: operation . PLUS value ';'
   14          | operation . MINUS value ';'
   15          | operation . MUL value ';'
   16          | operation . DIV value ';'

    MINUS  shift, and go to state 26
    PLUS   shift, and go to state 27
    MUL    shift, and go to state 28
    DIV    shift, and go to state 29
    UNTIL  shift, and go to state 37


State 23

   12 while: WHILE '(' . condition ')' operation END

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    condition  go to state 38
    value      go to state 19


State 24

   26 display: PRINT value . ';'

    ';'  shift, and go to state 39


State 25

    7 assignment: VAR '=' . value ';'

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    value  go to state 40


State 26

   14 operation: operation MINUS . value ';'

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    value  go to state 41


State 27

   13 operation: operation PLUS . value ';'

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    value  go to state 42


State 28

   15 operation: operation MUL . value ';'

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    value  go to state 43


State 29

   16 operation: operation DIV . value ';'

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    value  go to state 44


State 30

   19 condition: condition LT . value

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    value  go to state 45


State 31

   20 condition: condition GT . value

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    value  go to state 46


State 32

   21 condition: condition LTE . value

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    value  go to state 47


State 33

   22 condition: condition GTE . value

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    value  go to state 48


State 34

   23 condition: condition EQV . value

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    value  go to state 49


State 35

   24 condition: condition NE . value

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    value  go to state 50


State 36

    8 ifloop: IF '(' condition . ')' THEN ':' operation ELSE operation ENDIF
   19 condition: condition . LT value
   20          | condition . GT value
   21          | condition . LTE value
   22          | condition . GTE value
   23          | condition . EQV value
   24          | condition . NE value

    LT   shift, and go to state 30
    GT   shift, and go to state 31
    LTE  shift, and go to state 32
    GTE  shift, and go to state 33
    EQV  shift, and go to state 34
    NE   shift, and go to state 35
    ')'  shift, and go to state 51


State 37

   11 until: LOOP operation UNTIL . '(' condition ')'

    '('  shift, and go to state 52


State 38

   12 while: WHILE '(' condition . ')' operation END
   19 condition: condition . LT value
   20          | condition . GT value
   21          | condition . LTE value
   22          | condition . GTE value
   23          | condition . EQV value
   24          | condition . NE value

    LT   shift, and go to state 30
    GT   shift, and go to state 31
    LTE  shift, and go to state 32
    GTE  shift, and go to state 33
    EQV  shift, and go to state 34
    NE   shift, and go to state 35
    ')'  shift, and go to state 53


State 39

   26 display: PRINT value ';' .

    $default  reduce using rule 26 (display)


State 40

    7 assignment: VAR '=' value . ';'

    ';'  shift, and go to state 54


State 41

   14 operation: operation MINUS value . ';'

    ';'  shift, and go to state 55


State 42

   13 operation: operation PLUS value . ';'

    ';'  shift, and go to state 56


State 43

   15 operation: operation MUL value . ';'

    ';'  shift, and go to state 57


State 44

   16 operation: operation DIV value . ';'

    ';'  shift, and go to state 58


State 45

   19 condition: condition LT value .

    $default  reduce using rule 19 (condition)


State 46

   20 condition: condition GT value .

    $default  reduce using rule 20 (condition)


State 47

   21 condition: condition LTE value .

    $default  reduce using rule 21 (condition)


State 48

   22 condition: condition GTE value .

    $default  reduce using rule 22 (condition)


State 49

   23 condition: condition EQV value .

    $default  reduce using rule 23 (condition)


State 50

   24 condition: condition NE value .

    $default  reduce using rule 24 (condition)


State 51

    8 ifloop: IF '(' condition ')' . THEN ':' operation ELSE operation ENDIF

    THEN  shift, and go to state 59


State 52

   11 until: LOOP operation UNTIL '(' . condition ')'

    INUM  shift, and go to state 7
    FNUM  shift, and go to state 8
    VAR   shift, and go to state 21

    condition  go to state 60
    value      go to state 19


State 53

   12 while: WHILE '(' condition ')' . operation END

    PRINT  shift, and go to state 6
    INUM   shift, and go to state 7
    FNUM   shift, and go to state 8
    VAR    shift, and go to state 21

    operation  go to state 61
    condition  go to state 17
    display    go to state 18
    value      go to state 19


State 54

    7 assignment: VAR '=' value ';' .

    $default  reduce using rule 7 (assignment)


State 55

   14 operation: operation MINUS value ';' .

    $default  reduce using rule 14 (operation)


State 56

   13 operation: operation PLUS value ';' .

    $default  reduce using rule 13 (operation)


State 57

   15 operation: operation MUL value ';' .

    $default  reduce using rule 15 (operation)


State 58

   16 operation: operation DIV value ';' .

    $default  reduce using rule 16 (operation)


State 59

    8 ifloop: IF '(' condition ')' THEN . ':' operation ELSE operation ENDIF

    ':'  shift, and go to state 62


State 60

   11 until: LOOP operation UNTIL '(' condition . ')'
   19 condition: condition . LT value
   20          | condition . GT value
   21          | condition . LTE value
   22          | condition . GTE value
   23          | condition . EQV value
   24          | condition . NE value

    LT   shift, and go to state 30
    GT   shift, and go to state 31
    LTE  shift, and go to state 32
    GTE  shift, and go to state 33
    EQV  shift, and go to state 34
    NE   shift, and go to state 35
    ')'  shift, and go to state 63


State 61

   12 while: WHILE '(' condition ')' operation . END
   13 operation: operation . PLUS value ';'
   14          | operation . MINUS value ';'
   15          | operation . MUL value ';'
   16          | operation . DIV value ';'

    MINUS  shift, and go to state 26
    PLUS   shift, and go to state 27
    MUL    shift, and go to state 28
    DIV    shift, and go to state 29
    END    shift, and go to state 64


State 62

    8 ifloop: IF '(' condition ')' THEN ':' . operation ELSE operation ENDIF

    PRINT  shift, and go to state 6
    INUM   shift, and go to state 7
    FNUM   shift, and go to state 8
    VAR    shift, and go to state 21

    operation  go to state 65
    condition  go to state 17
    display    go to state 18
    value      go to state 19


State 63

   11 until: LOOP operation UNTIL '(' condition ')' .

    $default  reduce using rule 11 (until)


State 64

   12 while: WHILE '(' condition ')' operation END .

    $default  reduce using rule 12 (while)


State 65

    8 ifloop: IF '(' condition ')' THEN ':' operation . ELSE operation ENDIF
   13 operation: operation . PLUS value ';'
   14          | operation . MINUS value ';'
   15          | operation . MUL value ';'
   16          | operation . DIV value ';'

    MINUS  shift, and go to state 26
    PLUS   shift, and go to state 27
    MUL    shift, and go to state 28
    DIV    shift, and go to state 29
    ELSE   shift, and go to state 66


State 66

    8 ifloop: IF '(' condition ')' THEN ':' operation ELSE . operation ENDIF

    PRINT  shift, and go to state 6
    INUM   shift, and go to state 7
    FNUM   shift, and go to state 8
    VAR    shift, and go to state 21

    operation  go to state 67
    condition  go to state 17
    display    go to state 18
    value      go to state 19


State 67

    8 ifloop: IF '(' condition ')' THEN ':' operation ELSE operation . ENDIF
   13 operation: operation . PLUS value ';'
   14          | operation . MINUS value ';'
   15          | operation . MUL value ';'
   16          | operation . DIV value ';'

    MINUS  shift, and go to state 26
    PLUS   shift, and go to state 27
    MUL    shift, and go to state 28
    DIV    shift, and go to state 29
    ENDIF  shift, and go to state 68


State 68

    8 ifloop: IF '(' condition ')' THEN ':' operation ELSE operation ENDIF .

    $default  reduce using rule 8 (ifloop)
